{"version":3,"sources":["components/HeadNews.js","components/MainContent.js","store.js","components/Spinner.js","App.js","serviceWorker.js","components/NavBar.js","components/Footer.js","components/CountryDetail.js","index.js"],"names":["theme","createMuiTheme","responsiveFontSizes","useStyles","makeStyles","root","flexGrow","marginTop","spacing","paper","padding","textAlign","border","borderRadius","color","palette","text","primary","breakpoints","down","marginLeft","marginRight","up","HeadPaper","props","classes","Paper","className","elevation","ThemeProvider","Typography","variant","gutterBottom","Table","data","useState","dataList","capitalize","str","charAt","toUpperCase","slice","formatInfo","object","toLocaleString","printCase","newStr","Grid","item","xs","Fragment","style","container","tempData","country","toLowerCase","push","filterData","map","md","Tooltip","title","placement","to","pathname","state","columns","id","label","align","format","value","bgColor","continent","descendingComparator","a","b","orderBy","maxHeight","tableName","justify","MainTable","filteredDataList","setFilteredDataList","paginationActive","React","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","setOrderBy","createSortHandler","property","event","handleRequestSort","onSearchValueChanged","tempFilteredDataList","newDataList","toString","includes","filterDataListForValue","console","log","searchHidden","TableContainer","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","key","sortDirection","fontWeight","sortLabel","TableSortLabel","active","direction","onClick","TableBody","find","array","comparator","stabilizedThis","el","index","sort","stableSort","length","filterDataList","getComparator","hover","role","tabIndex","backgroundColor","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","target","href","DefaultRow","SearchBar","TextField","placeholder","InputLabelProps","shrink","fullWidth","onChange","initialState","store","createContext","Provider","StateProvider","children","useReducer","action","type","val","Error","dispatch","display","alignItems","justifyContent","CircularDeterminate","progress","setProgress","useEffect","timer","setInterval","oldProgress","clearInterval","CircularProgress","secondary","button","SelectorButton","today","yesterday","colors","setColors","handleClick","name","buttonName","onButtonClick","Button","textTransform","Boolean","window","location","hostname","match","margin","menuButton","NavBar","AppBar","position","Toolbar","IconButton","flexDirection","footer","marginBottom","grey","StickyFooter","Container","maxWidth","Copyright","Date","getFullYear","span","CustomPaper","isEmpty","cases","textFormat","upperTitle","peopleInLeftPart","leftPercentage","peopleInRightPart","Math","floor","leftTitle","rightTitle","showLowerPart","extra","ReactDOM","render","path","isLoading","setIsLoading","isError","setIsError","setButtonName","globalState","useContext","setData","fetchData","day","url","axios","result","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c1a269b3.chunk.js","sourcesContent":["import React, { Component,useState, useEffect } from 'react';\r\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Paper,\r\n    Typography,\r\n    Grid,\r\n    Tooltip\r\n } from '@material-ui/core';\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        marginTop: theme.spacing(5),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        //background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        //boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: theme.palette.text.primary,\r\n        //height: 100,\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginLeft: theme.spacing(5),\r\n            marginRight: theme.spacing(5),\r\n        },\r\n        \r\n    }\r\n}))\r\n\r\nexport default function HeadPaper(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Paper className={classes.paper} elevation={5}>\r\n            <ThemeProvider theme={theme}>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Covid-19 Update\r\n                </Typography>\r\n            </ThemeProvider>\r\n            <Table data={props.data}/>\r\n        </Paper>\r\n\r\n    );\r\n}\r\n\r\n\r\nfunction Table(props) {\r\n    const classes = useStyles();\r\n    const [dataList, setDataList] = useState(props.data);\r\n\r\n    function filterData() {\r\n        const tempData = [];\r\n        for(const data of dataList) {\r\n            if(data.country.toLowerCase() == 'bangladesh' || data.country.toLowerCase() == 'world')tempData.push(data);   \r\n        }\r\n        return tempData;\r\n    }\r\n\r\n\r\n    function capitalize(str) {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n   \r\n    function formatInfo(object, str) {\r\n        return `${capitalize(str)}: ${object[str].toLocaleString('en-US')}`;\r\n       \r\n    }\r\n    function printCase(object, str, newStr=null) {\r\n        return (\r\n            <Grid item xs={12}>\r\n                <ThemeProvider theme={theme}>\r\n                    <span>\r\n                        <Typography>\r\n                            {formatInfo(object, str)}\r\n                        </Typography>\r\n                        <React.Fragment>\r\n                            {newStr === null? (\r\n                                ''\r\n                            ) : (\r\n                                <React.Fragment>\r\n                                    {newStr === 'new cases'? (\r\n                                        <Typography style={{color: 'red'}}>\r\n                                            {`( +${object[newStr].toLocaleString('en-US')} )`}\r\n                                        </Typography>\r\n                                    ) : (\r\n                                        <Typography style={{color: '#a88532'}}> \r\n                                            {`( +${object[newStr].toLocaleString('en-US')} )`}\r\n                                        </Typography>\r\n                                    )}\r\n                                </React.Fragment>\r\n                            )}\r\n                        </React.Fragment>\r\n                    </span>\r\n                </ThemeProvider>\r\n            </Grid>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Grid container spacing={5}>\r\n            <React.Fragment>\r\n                {\r\n                    filterData().map((data) => (\r\n                        <Grid item xs={12} md={6}>\r\n                            <Paper variant=\"outlined\">\r\n                                <Grid container spacing={1}>\r\n                                    <Grid item xs={12}>\r\n                                        <Tooltip title=\"see details\" placement=\"top\">\r\n                                            <Link to={{\r\n                                                pathname: `/country/${data.country}/`,\r\n                                                state: {\r\n                                                    data: data\r\n                                                }\r\n                                            }}>\r\n                                                <ThemeProvider theme={theme}>\r\n                                                    <Typography variant=\"h6\" gutterBottom>\r\n                                                        {capitalize(data.country)}\r\n                                                    </Typography>\r\n                                                </ThemeProvider>\r\n                                            </Link>\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    {printCase(data, \"total cases\", \"new cases\")}\r\n                                    {printCase(data, \"total deaths\", \"new deaths\")}\r\n                                    {printCase(data, \"total recovered\")}\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>    \r\n                    ))\r\n                }\r\n            </React.Fragment>\r\n        </Grid>\r\n    );\r\n}","import React, { useState,useEffect } from \"react\";\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {\r\n    Paper,\r\n    Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    TablePagination,\r\n    TableSortLabel,\r\n    IconButton,\r\n    Button,\r\n    Grid,\r\n    Tooltip,\r\n    Typography,\r\n    InputBase,\r\n    TextField,\r\n    Box,\r\n} from '@material-ui/core';\r\n\r\nimport { isCompositeComponentWithType } from \"react-dom/test-utils\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { lightBlue } from \"@material-ui/core/colors\";\r\n\r\nconst columns = [\r\n    { \r\n        id: \"country\",\r\n        label: \"Country\",\r\n        align:\"center\"\r\n    },\r\n    {   id: \"total cases\",\r\n        label: \"Total cases\",\r\n        align: \"right\",\r\n        padding: 3,\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: \"new cases\",\r\n        label: \"New cases\",\r\n        align: \"right\",\r\n        padding: 3,\r\n        bgColor: \"#edeb82\",\r\n        color: \"black\",\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: \"total deaths\",\r\n        label: \"Total deaths\",\r\n        align: \"right\",\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: \"new deaths\",\r\n        label: \"New deaths\",\r\n        align: \"right\",\r\n        bgColor: \"red\",\r\n        color: \"white\",\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: \"total recovered\",\r\n        label: \"Total recovered\",\r\n        align: \"right\",\r\n        bgColor: \"#0d7303\",\r\n        color: \"white\",\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: \"active cases\",\r\n        label: \"Active cases\",\r\n        align: \"right\",\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: \"serious/ critical\",\r\n        label: \"Critical cases\",\r\n        align: \"right\",\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: \"test/1M population\",\r\n        label: \"Test/1M \",\r\n        align: \"right\",\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: \"total tests\",\r\n        label: \"Total tests\",\r\n        align: \"right\",\r\n        format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n  \r\n];\r\nconst continent = [\r\n    \"asia\",\r\n    \"europe\",\r\n    \"africa\",\r\n    \"north america\",\r\n    \"south america\",\r\n    \"oceania\",\r\n    'world'\r\n]\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n         return 1;\r\n    }\r\n    return 0;\r\n}\r\n  \r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n  \r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 10,\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(5),\r\n            marginRight: theme.spacing(5),\r\n        },\r\n    },\r\n    container: {\r\n        maxHeight: 800,\r\n    },\r\n    tableName: {\r\n        textAlign: 'center',\r\n        justify: \"center\",\r\n    },\r\n}))\r\n\r\nexport default function MainTable(props) {\r\n    const classes = useStyles();\r\n    const [dataList, setDataList] = useState(props.dataList);\r\n    const [filteredDataList, setFilteredDataList] = useState(props.dataList);\r\n    const [paginationActive, setPaginationActive] = useState(props.paginationActive);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(15);\r\n    const [order, setOrder] = React.useState('desc');\r\n    const [orderBy, setOrderBy] = React.useState('new cases');\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n    const createSortHandler = (property) => (event) => {\r\n        handleRequestSort(event, property);\r\n    };\r\n\r\n    function isNotEmpty(str) {\r\n        if(!str || str.length == 0)return false;\r\n        else return true;\r\n    }\r\n\r\n    const handleSearch = (value) => {\r\n        const tempFilteredDataList = filterDataListForValue(value);\r\n        console.log(value);\r\n        console.log(tempFilteredDataList);\r\n        setFilteredDataList(tempFilteredDataList);   \r\n    }\r\n    function filterDataListForValue(value) {\r\n        if(value === '')return dataList;\r\n        let newDataList = [];\r\n        for(const data of dataList) {\r\n            const entryStr = data.country.toString().toLowerCase();\r\n            if(entryStr.includes(value)) {\r\n                newDataList.push(data);\r\n            }\r\n        }\r\n        return newDataList;\r\n    }\r\n    // It will remove continent info and invalid info\r\n    function filterDataList() {\r\n        const tempData = [];\r\n        for(const data of filteredDataList) {\r\n            if(!continent.includes(data.country.toLowerCase()) && isNotEmpty(data.country))tempData.push(data);   \r\n        }\r\n        \r\n        return tempData;\r\n    }\r\n    const world = () => {\r\n        return dataList.find((data) => data.country.toLowerCase() == 'world');\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.root} elevation={3}>\r\n            <SearchBar\r\n                onSearchValueChanged = {handleSearch}\r\n                searchHidden = {props.searchHidden}\r\n            />\r\n            <TableContainer className={classes.container}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                        {columns.map(column => (\r\n                            <TableCell\r\n                                key={column.id}\r\n                                align=\"center\"\r\n                                sortDirection={orderBy === column.id ? order : false}\r\n                                style={{fontWeight:\"bold\"}}\r\n                            >\r\n                                <React.Fragment>\r\n                                    {props.sortLabel === 'hide'? (\r\n                                        `${column.label}`\r\n                                    ) : (\r\n                                        <TableSortLabel\r\n                                            active={orderBy === column.id}\r\n                                            direction={orderBy === column.id ? order : 'asc'}\r\n                                            onClick={createSortHandler(column.id)}\r\n                                            >\r\n                                            {column.label}\r\n                                            \r\n                                        </TableSortLabel>\r\n                                    )}\r\n                                </React.Fragment>\r\n                            </TableCell>\r\n                        ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        \r\n                        <DefaultRow data={world()}/>    \r\n                    {   \r\n                \r\n                        stableSort(filterDataList(), getComparator(order, orderBy))\r\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        .map(data => {\r\n                            return (\r\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={data.country}>\r\n                                    {columns.map((column) => {\r\n                                        const value = data[column.id];\r\n                                        \r\n                                        return (\r\n                                            <React.Fragment>\r\n                                                {value > 0? (\r\n                                                    <TableCell\r\n                                                        key={column.id}\r\n                                                        align={column.align}\r\n                                                        style={{backgroundColor: column.bgColor, color: column.color, fontWeight: \"bold\"}}\r\n                                                    >\r\n                                                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                    </TableCell>\r\n                                                ) : (\r\n                                                    <React.Fragment>\r\n                                                        {column.id === 'country'? (\r\n                                                            <TableCell\r\n                                                                key={column.id}\r\n                                                                align={column.align}\r\n                                                                style={{fontWeight: \"bold\"}}\r\n                                                            >\r\n                                                                <Tooltip title=\"see details\">\r\n                                                                    <Link to={{\r\n                                                                        pathname: `/country/${value}/`,\r\n                                                                        state: {\r\n                                                                            data: data\r\n                                                                        }\r\n                                                                    }}>{value}</Link>\r\n                                                                </Tooltip>\r\n                                                            </TableCell>\r\n                                                        ) : (\r\n                                                            <TableCell key={column.id} align={column.align}>\r\n                                                                {value}\r\n                                                            </TableCell>\r\n                                                        )}\r\n                                                    </React.Fragment>\r\n                                                )}\r\n                                            </React.Fragment>\r\n                                        );\r\n                                    })}\r\n                                </TableRow>\r\n                            );\r\n                        })\r\n                    }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <React.Fragment>\r\n                { paginationActive === 'true'? (\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[15, 25, 100]}\r\n                        component=\"div\"\r\n                        count={dataList.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                ) : (\r\n                    ''\r\n                )}\r\n            </React.Fragment>\r\n            <Typography variant=\"caption\">\r\n                <span>\r\n                    {`data source: `}\r\n                    <a  href={'https://www.worldometers.info/coronavirus/'}>\r\n                        {'https://www.worldometers.info'}\r\n                    </a>\r\n                </span>\r\n            </Typography>\r\n        </Paper>\r\n    );\r\n}\r\n\r\n\r\nconst DefaultRow = (props) => {\r\n   const [data, setData] = useState(props.data);\r\n    \r\n    return (\r\n        <TableRow key='world'>\r\n            <React.Fragment>\r\n                { typeof data === 'undefined'? (\r\n                    <div></div>\r\n                ) : (\r\n                    <React.Fragment>\r\n                        {columns.map((column) => {\r\n                            const value = data[column.id];\r\n                            return (\r\n                                \r\n                                <TableCell\r\n                                    key={column.id}\r\n                                    align={column.align}\r\n                                    style={{backgroundColor: \"#d8e0ed\", fontWeight: \"bold\"}}\r\n                                >\r\n                                    {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                </TableCell>\r\n                                   \r\n                            );\r\n                        })}\r\n                    </React.Fragment>\r\n\r\n                    \r\n                )}\r\n            </React.Fragment>\r\n        </TableRow>\r\n    );\r\n}\r\n\r\nconst SearchBar = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const handleSearch = (event) => {\r\n        const value = event.target.value;\r\n        props.onSearchValueChanged(value.toLowerCase());\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {props.searchHidden === 'false'? (\r\n                <Grid container>\r\n                    <Grid item xs={6}>\r\n                        <div className={classes.tableName}>\r\n                            <Typography variant=\"h6\">\r\n                                Covid-19 Statistics\r\n                            </Typography>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            placeholder=\"Search country name..\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            onChange={handleSearch}\r\n                        />   \r\n                    </Grid>\r\n                </Grid>\r\n            ) : (\r\n                ''\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}","import React, {createContext, useReducer} from 'react';\r\n\r\nconst initialState = {\r\n    data:[]\r\n};\r\n\r\nexport const store = createContext();\r\nconst { Provider } = store;\r\n\r\nexport const StateProvider = ( { children } ) => {\r\n    const [state, dispatch] = useReducer((state, action) => {\r\n        switch(action.type) {\r\n        case 'assign':\r\n            return {\r\n                data: action.item\r\n            };\r\n        case 'add':\r\n            \r\n            console.log(state);\r\n            return {\r\n                ...state, \r\n                val: state.val + action.item\r\n            };\r\n        \r\n        default:\r\n            throw new Error();\r\n        };\r\n    }, initialState);\r\n\r\n    return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(2),\r\n        },\r\n        alignItems: 'center',\r\n        justifyContent:'center',\r\n    },\r\n}));\r\n  \r\nexport default function CircularDeterminate() {\r\n    const classes = useStyles();\r\n    const [progress, setProgress] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        function tick() {\r\n            // reset when reaching 100%\r\n            setProgress((oldProgress) => (oldProgress >= 100 ? 0 : oldProgress + 1));\r\n        }\r\n\r\n        const timer = setInterval(tick, 20);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CircularProgress variant=\"determinate\" value={progress} />\r\n        </div>\r\n    );\r\n}"," import React, { Component, useState, useEffect, useContext } from 'react';\n import{ makeStyles } from '@material-ui/core/styles';\n import {\n    HashRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n import {\n     Paper,\n     Grid,\n     Button,\n     Typography,\n     Tooltip,\n     Container,\n } from '@material-ui/core';\n import HeadPaper from './components/HeadNews';\n import MainTable from './components/MainContent';\n import axios from 'axios';\n import { store } from './store.js';\n import CircularDeterminate from './components/Spinner';\n\n const useStyles = makeStyles((theme) => ({\n     root: {\n         flexGrow: 1,\n         marginTop: theme.spacing(5),\n     },\n    \n     paper: {\n         padding: theme.spacing(2),\n         textAlign: 'center',\n         color: theme.palette.text.secondary,\n     },\n     button: {\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(5),\n        },\n     },\n }))\n\n export default function App(props) {\n    const classes = useStyles();\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const [demo, setDemo] = useState(0);\n    const [buttonName, setButtonName] = useState('today');\n    const globalState = useContext(store);\n    const [data, setData] = useState(globalState.state.data);\n    const { dispatch } = globalState;\n\n    const fetchData = async (day) => {\n        setIsError(false);\n        setIsLoading(true);\n        try {\n            let url = `https://covid-19-info-bd.herokuapp.com/api/v1/corona_stats/${day}/`;\n            const result = await axios(url);\n            \n            setData(result.data);\n        } catch (error) {\n            console.log(error);\n            setIsError(true);\n        }\n        finally {\n            setIsLoading(false);\n        }\n        \n    };\n    useEffect(() => {\n        if(globalState.state.data.length === 0) {\n            fetchData('today');\n        }\n\n    }, []);\n\n    useEffect(() => {\n        if(data.length !== 0) {\n            console.log(data);\n            dispatch({ type: 'assign', item: data });\n        }\n    }, [data]);\n    \n    function FormRow() {\n        return (\n            <React.Fragment>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>item</Paper>\n                </Grid>\n            </React.Fragment>\n        );    \n    }\n    const handleButtonClick = (name) => {\n        setButtonName(name);\n        fetchData(name);\n    }\n\n    return (\n        <div className={classes.root}>\n            {isError ? (\n                <Grid container><Grid item xs={12} style={{textAlign: \"center\"}}>Something went wrong...</Grid></Grid>\n            ) :(\n                <React.Fragment>\n                    { isLoading ? (\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <CircularDeterminate/>\n                            </Grid>\n                        </Grid>\n                \n                    ) : (\n                        <Grid container spacing={3}>\n                            <Grid item xs={12}>\n                                <HeadPaper data={data}/>\n                            </Grid>\n                            <Grid container item xs={12} direction=\"row\">\n                                <Grid item xs={6} >\n                                    <SelectorButton onButtonClick={handleButtonClick} buttonName={buttonName}/>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <MainTable \n                                        dataList={data}\n                                        paginationActive=\"true\"\n                                        sortLabel=\"show\"\n                                        searchHidden=\"false\"\n                                    />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    )}\n                </React.Fragment>\n            )}\n        </div>\n    );\n\n }\n\n const SelectorButton = (props) => {\n    const classes = useStyles();\n\n    const [colors, setColors] = useState({\n        today: 'primary',\n        yesterday: 'default'\n    });\n\n    const handleClick = (name) => {\n        console.log(name);\n        console.log(props.buttonName);\n        if(name !== props.buttonName) {\n            props.onButtonClick(name);\n        }\n    }\n    \n    useEffect(() => {\n        if(props.buttonName === 'yesterday') {\n            setColors({\n                today: 'default',\n                yesterday:'primary'\n            });\n        }\n    }, []);\n\n    return (\n        <Grid container spacing={1} className={classes.button}>\n            <Grid item>\n                <Tooltip title=\"see todays data\">\n                    <Button\n                        variant=\"contained\"\n                        color={colors.today}\n                        onClick={() => handleClick('today')}\n                        style={{textTransform: \"none\"}}\n                    >\n                    Today\n                    </Button>\n                </Tooltip>\n            </Grid>\n            <Grid item>\n                <Tooltip title=\"see yesterdays data\">\n                    <Button \n                        variant=\"contained\"\n                        color={colors.yesterday}\n                        onClick={() => handleClick('yesterday')}\n                        style={{textTransform: \"none\"}}\n                    >\n                        Yesterday\n                    </Button>\n                </Tooltip>\n            </Grid>\n        </Grid>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    Button,\r\n    IconButton,\r\n    Avatar,\r\n    Tooltip,\r\n} from '@material-ui/core';\r\nimport  MenuIcon from '@material-ui/icons/Menu';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        margin: 0,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function NavBar() {\r\n    const classes = useStyles();\r\n    return(\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}> \r\n                        Corona Tracker\r\n                    </Typography>\r\n                    <Tooltip title=\"Github Repository\">\r\n                        <a target=\"_blank\" href={`https://github.com/sujon13/Corona-App-ReactJs`}>\r\n                            <IconButton>\r\n                                <GitHubIcon style={{color:'white'}}/>\r\n                            </IconButton>\r\n                        </a>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Developer linkedin profile\">\r\n                        <a target=\"_blank\" href={`https://www.linkedin.com/in/arifur-rahman-sujon/`}>\r\n                            <IconButton>\r\n                                <LinkedInIcon style={{color:'white'}}/>\r\n                            </IconButton>\r\n                        </a>\r\n                    </Tooltip>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    footer: {\r\n        textAlign: 'center',\r\n        padding: theme.spacing(3, 2),\r\n        marginBottom: 0,\r\n        backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n    },\r\n}));\r\n  \r\nexport default function StickyFooter() {\r\n    const classes = useStyles();\r\n  \r\n    return (\r\n        <div className={classes.root}>\r\n            <footer className={classes.footer}>\r\n                <Container maxWidth=\"sm\">\r\n                    <Typography variant=\"body1\"></Typography>\r\n                    <Copyright />\r\n                </Container>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\">\r\n        {'Copyright © '}\r\n        Arifur Rahman Sujon\r\n        {' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }","import React, { Component, useState, useEffect } from 'react';\r\nimport{ makeStyles } from '@material-ui/core/styles';\r\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\r\nimport {\r\n    Paper,\r\n    Grid,\r\n    Typography,\r\n    Divider,\r\n    Container\r\n} from '@material-ui/core';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport MainTable from './MainContent';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        marginTop: theme.spacing(5),\r\n    },\r\n   \r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.primary,\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    span:{\r\n        marginTop: theme.spacing(5),\r\n        marginBottom: theme.spacing(2),\r\n    }\r\n}))\r\n\r\nexport default function CountryDetail(props) {\r\n   const classes = useStyles();\r\n   const [data, setData] = useState(props.location.state.data);\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [isError, setIsError] = useState(false);\r\n   \r\n\r\n   return (\r\n       <div className={classes.root}>\r\n           {console.log(props)}\r\n           <Grid container spacing={2}>\r\n               <Grid item xs={12} align=\"center\">\r\n                    <a  href={`https://en.wikipedia.org/wiki/${data.country}`}>\r\n                        <ThemeProvider theme={theme}>\r\n                            <Typography variant=\"h2\" gutterBottom>\r\n                                {data.country}\r\n                            </Typography>\r\n                        </ThemeProvider>\r\n                    </a>\r\n               </Grid>\r\n               <Grid item xs={12} md={6} >\r\n                    <CustomPaper \r\n                        data={data}\r\n                        cases=\"ACTIVE CASES\"\r\n                        upperTitle=\"Currently Infected Patients\"\r\n                        leftTitle=\"in Mild Condition\"\r\n                        rightTitle=\"Serious or Critical\"\r\n                    />\r\n               </Grid>\r\n               <Grid item xs={12} md={6} >\r\n                    <CustomPaper \r\n                        data={data}\r\n                        cases=\"CLOSED CASES\"\r\n                        upperTitle=\"Cases which had an outcome:\"\r\n                        leftTitle=\"Recovered / Discharged\"\r\n                        rightTitle=\"Deaths\"\r\n                    />\r\n               </Grid>\r\n           </Grid>\r\n           <Grid container className={classes.span}>\r\n               <Grid item xs={12} style={{textAlign: \"center\"}}>\r\n                    <Typography variant=\"h6\">\r\n                        {`Corona Status of ${data.country}`}\r\n                    </Typography>\r\n               </Grid>\r\n           </Grid>\r\n\r\n           <MainTable \r\n                dataList = {[data]} \r\n                paginationActive=\"false\" \r\n                sortLabel=\"hide\"\r\n                searchHidden=\"true\"\r\n            />\r\n       </div>\r\n   );\r\n\r\n}\r\n\r\nfunction CustomPaper(props) {\r\n    const [data, setData] = useState(props.data);\r\n    \r\n    const classes = useStyles();\r\n    const isEmpty = (text) => {\r\n        return (text === 'undefined' || text === '' || text === 'N/A');\r\n    }\r\n    const dataAvaiableForActive = () => {\r\n        if(isEmpty(data['active cases']) || isEmpty(data['serious/ critical']))return false;\r\n        return true;\r\n    }\r\n    const dataAvaiableForClosed = () => {\r\n        if(isEmpty(data['total recovered']) || isEmpty(data['total deaths']))return false;\r\n        return true;\r\n    }\r\n    const willRender = () => {\r\n        if((props.cases === 'ACTIVE CASES' && dataAvaiableForActive()) ||\r\n            (props.cases === 'CLOSED CASES' && dataAvaiableForClosed())) return true;\r\n        return false;\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Paper className={classes.paper} style={{backgroundColor:'#9ab8e6'}}>\r\n                <ThemeProvider theme={theme}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {props.cases}\r\n                    </Typography>\r\n                </ThemeProvider>\r\n            </Paper>\r\n            <Paper className={classes.paper} style={{backgroundColor: '#e9ebf0'}}>\r\n                <React.Fragment>\r\n                    {willRender()? (\r\n                        <Grid container direction=\"row\" spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <React.Fragment>\r\n                                {\r\n                                    props.cases === 'ACTIVE CASES'? (\r\n                                        <React.Fragment>\r\n                                            {textFormat(data['active cases'])}\r\n                                            {textFormat(props.upperTitle)}\r\n                                        </React.Fragment>\r\n                                    ) : (\r\n                                        <React.Fragment>\r\n                                            {textFormat(data['total deaths'] + data['total recovered'])}\r\n                                            {textFormat(props.upperTitle)}\r\n                                        </React.Fragment>   \r\n                                    )\r\n                                    \r\n                                }\r\n                                </React.Fragment>\r\n                            </Grid>\r\n                            <Grid container item xs={12}>\r\n                                {showLowerPart(data, props)}\r\n                            </Grid>\r\n                        </Grid>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                {textFormat('Data is not available')}\r\n                            </React.Fragment>\r\n                    )}\r\n                </React.Fragment>\r\n            </Paper>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction textFormat(text, extra=null) {\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            {\r\n                typeof text === 'number'? (\r\n                    <Typography variant=\"h6\">\r\n                        {text.toLocaleString('en-US')}\r\n                        <React.Fragment>\r\n                        {\r\n                            extra !== null? (\r\n                                `(${extra}%)`\r\n                            ) : (\r\n                                ''\r\n                            )\r\n                        }\r\n                        </React.Fragment>\r\n                    </Typography>\r\n                ) : (\r\n                    <Typography>\r\n                        {text.toLocaleString('en-US')}\r\n                    </Typography>\r\n                )\r\n            }\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nfunction showLowerPart(data, props, isLeft = true) {\r\n    let peopleInLeftPart = null;\r\n    let leftPercentage = null;\r\n    let peopleInRightPart = null;\r\n\r\n    if (props.cases === 'ACTIVE CASES') {\r\n        peopleInLeftPart = data['active cases'] - data['serious/ critical'];\r\n        leftPercentage = (peopleInLeftPart / data['active cases']) * 100;\r\n        leftPercentage = Math.floor(leftPercentage);\r\n        peopleInRightPart = data['serious/ critical'];\r\n    } else {\r\n        peopleInLeftPart = data['total recovered'];\r\n        peopleInRightPart = data['total deaths'];\r\n        leftPercentage = (peopleInLeftPart / (peopleInLeftPart + peopleInRightPart)) * 100;\r\n        leftPercentage = Math.floor(leftPercentage);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid item xs={6} align=\"center\">\r\n                <React.Fragment>\r\n                    {textFormat(peopleInLeftPart, leftPercentage)}\r\n                    {textFormat(props.leftTitle)}\r\n                </React.Fragment>\r\n            </Grid>\r\n            <Grid item xs={6} align = \"center\">\r\n                <React.Fragment>\r\n                    {textFormat(peopleInRightPart, 100-leftPercentage)}\r\n                    {textFormat(props.rightTitle)}\r\n                </React.Fragment>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\nimport NavBar from './components/NavBar';\nimport Footer from './components/Footer';\nimport CountryDetail from './components/CountryDetail';\nimport { StateProvider } from './store.js';\n\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n\nReactDOM.render(\n        <StateProvider>\n            <React.Fragment>\n                <Router>\n                    <NavBar/>\n                    {/*<App url=\"http://127.0.0.1:8000/api/v1/corona_stats/\"/>*/}\n                    <Switch>\n                        <Route path=\"/\" component={App} exact/>\n                        <Route path=\"/country/:cName/\" component={CountryDetail}/>\n                    </Switch>\n                    <Footer/>\n                </Router>\n            </React.Fragment>\n        </StateProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}